# Get the current git branch
parse_git_branch() {
ref=$(git symbolic-ref HEAD 2> /dev/null | cut -d'/' -f3)

if [ -n "$ref" ]; then echo "[$ref]"; fi
}

# Lines configured by zsh-newuser-install
HISTFILE=~/.histfile
HISTSIZE=10000
SAVEHIST=10000
bindkey -v
# End of lines configured by zsh-newuser-install
# The following lines were added by compinstall
zstyle :compinstall filename '/home/alex/.zshrc'

autoload bashcompinit
bashcompinit

autoload -Uz compinit
compinit
# End of lines added by compinstall

alias tmux="TERM=rxvt-unicode-256color tmux"

# Set up theme
ZSH_THEME="doubleend"

# Set up plugins
plugins=(git)

# Make sure prompt is set to autoload
autoload -U promptinit
promptinit

export EDITOR="vim"

export PATH=~/essentials/bin:$PATH
export MANPATH=~/essentials/man/:$MANPATH

export PATH=/home/alex/.nvm/versions/node/v0.12.1/bin/:$PATH

# Fix rust (needs this exported)
export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/usr/local/lib

export GOPATH=/home/alex/go

# nvm
#source ~/.nvm/nvm.sh
#nvm use 0.12 1> /dev/null

source ~/.zsh_env

# rbenv
#export PATH="$HOME/.rbenv/bin:$PATH"
#eval "$(rbenv init -)"

# python
export PYTHON=python2.7

# Karma
export CHROME_BIN=google-chrome-stable

# Tools
export PATH="$HOME/essentials/scripts/tools:$PATH"

# Cargo
export PATH="$HOME/.cargo/bin:$PATH"

# node modules
export PATH="$HOME/essentials/node_modules/.bin:$PATH"


# Maybe fix jave applets & xmonad
_JAVA_AWT_WM_NONREPARENTING=1

# Set up colors
autoload -U colors && colors

# Set up custom prompt
setopt PROMPT_SUBST


function npm_chpwd_hook() {
  npmpath="$(npm bin)"

  if [ -d "$npmpath" ]; then
    PATH=$npmpath:$prenpmpath
  else
    PATH=$prenpmpath
  fi

  export PATH=$PATH
}

export prenpmpath=$PATH
export GTK_IM_MODULE=xim
export XMODIFIERS=@im=ibus
export QT_IM_MODULE=xim
export PATH=$PATH:/home/alex/packages/emsdk/emsdk_portable:/home/alex/packages/emsdk/emsdk_portable/clang/fastcomp/build_incoming_64/bin:/home/alex/packages/emsdk/emsdk_portable/node/4.1.1_64bit/bin:/home/alex/packages/emsdk/emsdk_portable/emscripten/incoming

autoload -Uz add-zsh-hook

#add-zsh-hook preexec npm_chpwd_hook

NIX_SNIPPET='─[%{$fg[red]%}NixSh%{$reset_color%}]'
if [ -z "${IS_NIX_SHELL+x}" ]; then
  NIX_SNIPPET=""
fi

USER_SNIPPET='%{$fg[yellow]%}%n%{$reset_color%}@%{$fg[cyan]%}%m%{$reset_color%}'
PATH_SNIPPET='%{$fg[green]%}%d%{$reset_color%}'

RPROMPT='%{$fg[yellow]%}$(parse_git_branch)%{$reset_color%}'

PROMPT="%{$fg[white]%}┌[$USER_SNIPPET]$NIX_SNIPPET─[$PATH_SNIPPET]
└─╼ "

# Key bindings
# ------------
if [[ $- == *i* ]]; then

# CTRL-T - Paste the selected file path(s) into the command line
__fsel() {
  local cmd="${FZF_CTRL_T_COMMAND:-"command find -L . \\( -path '*/\\.*' -o -fstype 'dev' -o -fstype 'proc' \\) -prune \
    -o -type f -print \
    -o -type d -print \
    -o -type l -print 2> /dev/null | sed 1d | cut -b3-"}"
  setopt localoptions pipefail 2> /dev/null
  eval "$cmd | $(__fzfcmd) -m $FZF_CTRL_T_OPTS" | while read item; do
    echo -n "${(q)item} "
  done
  local ret=$?
  echo
  return $ret
}

__fzfcmd() {
  [ ${FZF_TMUX:-1} -eq 1 ] && echo "fzf-tmux -d${FZF_TMUX_HEIGHT:-40%}" || echo "fzf"
}

fzf-file-widget() {
  LBUFFER="${LBUFFER}$(__fsel)"
  local ret=$?
  zle redisplay
  typeset -f zle-line-init >/dev/null && zle zle-line-init
  return $ret
}
zle     -N   fzf-file-widget
bindkey '^T' fzf-file-widget

# ALT-C - cd into the selected directory
fzf-cd-widget() {
  local cmd="${FZF_ALT_C_COMMAND:-"command find -L . \\( -path '*/\\.*' -o -fstype 'dev' -o -fstype 'proc' \\) -prune \
    -o -type d -print 2> /dev/null | sed 1d | cut -b3-"}"
  setopt localoptions pipefail 2> /dev/null
  cd "${$(eval "$cmd | $(__fzfcmd) +m $FZF_ALT_C_OPTS"):-.}"
  local ret=$?
  zle reset-prompt
  typeset -f zle-line-init >/dev/null && zle zle-line-init
  return $ret
}
zle     -N    fzf-cd-widget
bindkey '\ec' fzf-cd-widget

# CTRL-R - Paste the selected command from history into the command line
fzf-history-widget() {
  local selected num
  setopt localoptions noglobsubst pipefail 2> /dev/null
  selected=( $(fc -l 1 | eval "$(__fzfcmd) +s --tac +m -n2..,.. --tiebreak=index --toggle-sort=ctrl-r $FZF_CTRL_R_OPTS -q ${(q)LBUFFER}") )
  local ret=$?
  if [ -n "$selected" ]; then
    num=$selected[1]
    if [ -n "$num" ]; then
      zle vi-fetch-history -n $num
    fi
  fi
  zle redisplay
  typeset -f zle-line-init >/dev/null && zle zle-line-init
  return $ret
}
zle     -N   fzf-history-widget
bindkey '^R' fzf-history-widget

fi

# Default nix shell to open zsh instead of bash
alias nix-shell="nix-shell --command $SHELL"

# Shortcut for tmux attaching
alias tat='tmux attach -t'
