filetype on

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

Plugin 'gmarik/Vundle.vim'                " Plugin Manager

"" Larger Plugins
Plugin 'dkprice/vim-easygrep'             " Grep integration for vim
Plugin 'junegunn/fzf'                     " Fzf for fuzzy search
Plugin 'junegunn/fzf.vim'                 " Fzf for fuzzy search
Plugin 'rking/ag.vim'                     " Silver searcher file finder
Plugin 'scrooloose/nerdtree'              " File tree
Plugin 'scrooloose/syntastic'             " Syntax checker for many languages
Plugin 'tpope/vim-fugitive'               " Git version control wrapper
Plugin 'tpope/vim-surround'               " Quote+Paren manipulation
Plugin 'vim-airline/vim-airline'          " Bottom statusbar for vim

"" Small Plugins
Plugin 'altercation/vim-colors-solarized' " Solarized color scheme for vim
Plugin 'christoomey/vim-tmux-navigator'   " Integrate tmux and vim split movement
Plugin 'easymotion/vim-easymotion'        " Better movements without guessing
Plugin 'kana/vim-textobj-user'            " Defining custom text objects
Plugin 'myusuf3/numbers.vim'              " Intelligent toggle between relative and absolute line numbering
Plugin 'sjl/vitality.vim'                 " Compatability fixes for focus in tmux
Plugin 'tmhedberg/matchit'                " % matching for words and regex
Plugin 'tomtom/tlib_vim'                  " Util functions for other plugins
Plugin 'vim-scripts/tComment'             " Utilities for commenting/uncommenting lines and blocks
Plugin 'tpope/vim-obsession'              " Session saving/persistence -- especially functional with tmux-resurrect


"" Tiny Plugins
Plugin 'airblade/vim-gitgutter'           " Shows git diff (+/-/~) in sidebar
Plugin 'blarghmatey/split-expander'       " Quick commands for temporarily resizing splits
Plugin 'takac/vim-hardtime'               " Timeouts for vim movement keys (hard mode)
Plugin 'tpope/vim-endwise'                " Insert end after blocks in ruby
Plugin 'tpope/vim-sensible'               " Basic sensible default settings
Plugin 'vim-airline/vim-airline-themes'   " Basic airline themes

"" Language Support
Plugin 'derekwyatt/vim-scala'
Plugin 'digitaltoad/vim-pug'
Plugin 'fatih/vim-go'
Plugin 'gkz/vim-ls'
Plugin 'kchmck/vim-coffee-script'
Plugin 'lambdatoast/elm.vim'
Plugin 'lervag/vimtex'
Plugin 'slim-template/vim-slim'
Plugin 'thoughtbot/vim-rspec'
Plugin 'tpope/vim-bundler'
Plugin 'tpope/vim-haml'
Plugin 'tpope/vim-rails'
Plugin 'vim-ruby/vim-ruby'
Plugin 'rust-lang/rust.vim'
Plugin 'cstrahan/vim-capnp'

call vundle#end()
filetype plugin indent on

syntax enable

set list listchars=tab:»·,trail:·

" ---------------------------------------------------------
" Color Theme
" ---------------------------------------------------------
let g:solarized_termcolors=256
let g:solarized_termtrans=1
let g:solarized_degrade=0
let g:solarized_visibility="normal"
set background=dark
colorscheme solarized

" ---------------------------------------------------------
" Syntastic
" ---------------------------------------------------------
let g:syntastic_ruby_checkers  = ['mri']
let g:syntastic_enable_highlighting=0

" ---------------------------------------------------------
" Language Support
" ---------------------------------------------------------
autocmd FileType slim setlocal foldmethod=indent
autocmd BufNewFile,BufRead *.slim set filetype=slim
autocmd FileType rust setlocal shiftwidth=2 tabstop=2
autocmd BufRead,BufNewFile *.rs set filetype=rust
autocmd BufRead,BufNewFile *.rs.in set filetype=rust
autocmd BufRead,BufNewFile *.BUILD set filetype=python
autocmd FileType ls setlocal shiftwidth=2 tabstop=2
autocmd BufRead,BufNewFile *.ls set filetype=ls
autocmd FileType pug setlocal shiftwidth=2 tabstop=2
autocmd BufRead,BufNewFile *.jade set filetype=pug
autocmd BufRead,BufNewFile *.pug set filetype=pug
autocmd FileType scala setlocal shiftwidth=2 tabstop=2
autocmd FileType python setlocal shiftwidth=2 tabstop=2
autocmd BufRead,BufNewFile *.scala set filetype=scala
autocmd BufRead,BufNewFile *.elm set filetype=elm
autocmd BufNewFile,BufRead *.coffee set filetype=coffee
autocmd BufNewFile,BufRead *.capnp set filetype=capnp
autocmd BufNewFile,BufRead *.html.eex set filetype=html

let g:go_fmt_autosave = 0
let s:rust_src_path=$HOME . '/rust/src'
let g:rustfmt_autosave = 0
let g:ycm_rust_src_path=s:rust_src_path
nnoremap <leader>jd :YcmCompleter GoTo<CR>

" ---------------------------------------------------------
" Navigation
" ---------------------------------------------------------

" Easier split navigation
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

" Easier window movement
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-h> <C-w>h
nnoremap <C-l> <C-w>l

" ---------------------------------------------------------
" Basic Editor Behavior
" ---------------------------------------------------------
set splitbelow
set splitright

" Persistent undo
set undodir=~/.vim/undo/
set undofile
set undolevels=1000
set undoreload=10000

" Numbers
set number
set numberwidth=3

" Case stuff
set smartcase
set ignorecase
set noantialias

set nocompatible
set backspace=2
set nobackup
set ruler
set showcmd

set autowrite

" Softtabs, 2 spaces
set tabstop=2
set shiftwidth=2
set expandtab

" Limit syntax highlighting (esp for single line JS)
set synmaxcol=256

" Reduce timeout after <ESC> is recvd. This is only a good idea on fast links.
set ttimeout
set ttimeoutlen=20
set notimeout

" 256 colors support
set t_Co=256

set noswapfile
set nobackup
set nowritebackup

" ---------------------------------------------------------
" Hard mode
" ---------------------------------------------------------
"let g:hardtime_default_on = 1

" ---------------------------------------------------------
" Line Length
" ---------------------------------------------------------
highlight LineTooLong ctermbg=darkgray ctermfg=black
call matchadd('LineTooLong', '\%81v', 100)

" ---------------------------------------------------------
" Leader
" ---------------------------------------------------------
let mapleader = " "

" ---------------------------------------------------------
" File Tree
" ---------------------------------------------------------
map <F10> :NERDTreeToggle<CR>
map <F9> :NERDTreeFind<CR>

" ---------------------------------------------------------
" Local Editing
" ---------------------------------------------------------
" Edit another file in the same directory as the current file
" uses expression to extract path from current file's path
map <Leader>e :e <C-R>=expand("%:p:h") . '/'<CR>
map <Leader>s :split <C-R>=expand("%:p:h") . '/'<CR>
map <Leader>v :vnew <C-R>=expand("%:p:h") . '/'<CR>

" ---------------------------------------------------------
" Tab behavior
" ---------------------------------------------------------
cabbrev tp tabprev
cabbrev tn tabnext
cabbrev tf tabfirst
cabbrev tl tablast

" ---------------------------------------------------------
" Cursor
" ---------------------------------------------------------

" highlight vertical column of cursor
au WinLeave * set nocursorline nocursorcolumn
au WinEnter * set cursorline
set cursorline

" Cursor highlight
hi CursorLineNr guifg=#050505

" ---------------------------------------------------------
" Status Bar
" ---------------------------------------------------------
set laststatus=2
let g:airline#extensions#tabline#enabled=1
let g:airline_theme='solarized'

" ---------------------------------------------------------
" File Search
" ---------------------------------------------------------
nnoremap <C-p> :Files!<CR>
" Fuzzy finder: ignore stuff that can't be opened, and generated files
let g:fuzzy_ignore = "*.png;*.PNG;*.JPG;*.jpg;*.GIF;*.gif;vendor/**;coverage/**;tmp/**;rdoc/**"

if executable('ag')
  " Use Ag over Grep
  set grepprg=ag\ --nogroup
  let g:grep_cmd_opts = '--line-numbers --noheading'

endif

" ---------------------------------------------------------
" Text Search
" ---------------------------------------------------------

" bind K to search word under cursor
nnoremap K :Ag "\b<C-R><C-W>\b"<CR>:cw<CR>

" Search
set incsearch
set hlsearch
